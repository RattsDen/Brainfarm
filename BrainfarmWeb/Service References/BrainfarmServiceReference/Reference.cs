//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BrainfarmWeb.BrainfarmServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/BrainfarmService.Data")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreationDate {
            get {
                return this.CreationDateField;
            }
            set {
                if ((this.CreationDateField.Equals(value) != true)) {
                    this.CreationDateField = value;
                    this.RaisePropertyChanged("CreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Project", Namespace="http://schemas.datacontract.org/2004/07/BrainfarmService.Data")]
    [System.SerializableAttribute()]
    public partial class Project : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProjectIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] TagsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreationDate {
            get {
                return this.CreationDateField;
            }
            set {
                if ((this.CreationDateField.Equals(value) != true)) {
                    this.CreationDateField = value;
                    this.RaisePropertyChanged("CreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProjectID {
            get {
                return this.ProjectIDField;
            }
            set {
                if ((this.ProjectIDField.Equals(value) != true)) {
                    this.ProjectIDField = value;
                    this.RaisePropertyChanged("ProjectID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Tags {
            get {
                return this.TagsField;
            }
            set {
                if ((object.ReferenceEquals(this.TagsField, value) != true)) {
                    this.TagsField = value;
                    this.RaisePropertyChanged("Tags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Comment", Namespace="http://schemas.datacontract.org/2004/07/BrainfarmService.Data")]
    [System.SerializableAttribute()]
    public partial class Comment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BodyTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BrainfarmWeb.BrainfarmServiceReference.Comment[] ChildrenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CommentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BrainfarmWeb.BrainfarmServiceReference.ContributionFile[] ContributionFilesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EditedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsBookmarkedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsContributionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRemovedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSpecificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSynthesisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] LinkingCommentIDsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ParentCommentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BrainfarmWeb.BrainfarmServiceReference.SynthesisJunction[] SynthesesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BodyText {
            get {
                return this.BodyTextField;
            }
            set {
                if ((object.ReferenceEquals(this.BodyTextField, value) != true)) {
                    this.BodyTextField = value;
                    this.RaisePropertyChanged("BodyText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BrainfarmWeb.BrainfarmServiceReference.Comment[] Children {
            get {
                return this.ChildrenField;
            }
            set {
                if ((object.ReferenceEquals(this.ChildrenField, value) != true)) {
                    this.ChildrenField = value;
                    this.RaisePropertyChanged("Children");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CommentID {
            get {
                return this.CommentIDField;
            }
            set {
                if ((this.CommentIDField.Equals(value) != true)) {
                    this.CommentIDField = value;
                    this.RaisePropertyChanged("CommentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BrainfarmWeb.BrainfarmServiceReference.ContributionFile[] ContributionFiles {
            get {
                return this.ContributionFilesField;
            }
            set {
                if ((object.ReferenceEquals(this.ContributionFilesField, value) != true)) {
                    this.ContributionFilesField = value;
                    this.RaisePropertyChanged("ContributionFiles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreationDate {
            get {
                return this.CreationDateField;
            }
            set {
                if ((this.CreationDateField.Equals(value) != true)) {
                    this.CreationDateField = value;
                    this.RaisePropertyChanged("CreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EditedDate {
            get {
                return this.EditedDateField;
            }
            set {
                if ((this.EditedDateField.Equals(value) != true)) {
                    this.EditedDateField = value;
                    this.RaisePropertyChanged("EditedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsBookmarked {
            get {
                return this.IsBookmarkedField;
            }
            set {
                if ((this.IsBookmarkedField.Equals(value) != true)) {
                    this.IsBookmarkedField = value;
                    this.RaisePropertyChanged("IsBookmarked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsContribution {
            get {
                return this.IsContributionField;
            }
            set {
                if ((this.IsContributionField.Equals(value) != true)) {
                    this.IsContributionField = value;
                    this.RaisePropertyChanged("IsContribution");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRemoved {
            get {
                return this.IsRemovedField;
            }
            set {
                if ((this.IsRemovedField.Equals(value) != true)) {
                    this.IsRemovedField = value;
                    this.RaisePropertyChanged("IsRemoved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSpecification {
            get {
                return this.IsSpecificationField;
            }
            set {
                if ((this.IsSpecificationField.Equals(value) != true)) {
                    this.IsSpecificationField = value;
                    this.RaisePropertyChanged("IsSpecification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSynthesis {
            get {
                return this.IsSynthesisField;
            }
            set {
                if ((this.IsSynthesisField.Equals(value) != true)) {
                    this.IsSynthesisField = value;
                    this.RaisePropertyChanged("IsSynthesis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] LinkingCommentIDs {
            get {
                return this.LinkingCommentIDsField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkingCommentIDsField, value) != true)) {
                    this.LinkingCommentIDsField = value;
                    this.RaisePropertyChanged("LinkingCommentIDs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ParentCommentID {
            get {
                return this.ParentCommentIDField;
            }
            set {
                if ((this.ParentCommentIDField.Equals(value) != true)) {
                    this.ParentCommentIDField = value;
                    this.RaisePropertyChanged("ParentCommentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BrainfarmWeb.BrainfarmServiceReference.SynthesisJunction[] Syntheses {
            get {
                return this.SynthesesField;
            }
            set {
                if ((object.ReferenceEquals(this.SynthesesField, value) != true)) {
                    this.SynthesesField = value;
                    this.RaisePropertyChanged("Syntheses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContributionFile", Namespace="http://schemas.datacontract.org/2004/07/BrainfarmService.Data")]
    [System.SerializableAttribute()]
    public partial class ContributionFile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CommentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContributionFileIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilenameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CommentID {
            get {
                return this.CommentIDField;
            }
            set {
                if ((this.CommentIDField.Equals(value) != true)) {
                    this.CommentIDField = value;
                    this.RaisePropertyChanged("CommentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContributionFileID {
            get {
                return this.ContributionFileIDField;
            }
            set {
                if ((this.ContributionFileIDField.Equals(value) != true)) {
                    this.ContributionFileIDField = value;
                    this.RaisePropertyChanged("ContributionFileID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Filename {
            get {
                return this.FilenameField;
            }
            set {
                if ((object.ReferenceEquals(this.FilenameField, value) != true)) {
                    this.FilenameField = value;
                    this.RaisePropertyChanged("Filename");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SynthesisJunction", Namespace="http://schemas.datacontract.org/2004/07/BrainfarmService.Data")]
    [System.SerializableAttribute()]
    public partial class SynthesisJunction : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LinkedCommentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SynthesisCommentIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LinkedCommentID {
            get {
                return this.LinkedCommentIDField;
            }
            set {
                if ((this.LinkedCommentIDField.Equals(value) != true)) {
                    this.LinkedCommentIDField = value;
                    this.RaisePropertyChanged("LinkedCommentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Subject {
            get {
                return this.SubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectField, value) != true)) {
                    this.SubjectField = value;
                    this.RaisePropertyChanged("Subject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SynthesisCommentID {
            get {
                return this.SynthesisCommentIDField;
            }
            set {
                if ((this.SynthesisCommentIDField.Equals(value) != true)) {
                    this.SynthesisCommentIDField = value;
                    this.RaisePropertyChanged("SynthesisCommentID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SynthesisRequest", Namespace="http://schemas.datacontract.org/2004/07/BrainfarmService.Data")]
    [System.SerializableAttribute()]
    public partial class SynthesisRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LinkedCommentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubjectField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LinkedCommentID {
            get {
                return this.LinkedCommentIDField;
            }
            set {
                if ((this.LinkedCommentIDField.Equals(value) != true)) {
                    this.LinkedCommentIDField = value;
                    this.RaisePropertyChanged("LinkedCommentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Subject {
            get {
                return this.SubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectField, value) != true)) {
                    this.SubjectField = value;
                    this.RaisePropertyChanged("Subject");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileAttachmentRequest", Namespace="http://schemas.datacontract.org/2004/07/BrainfarmService.Data")]
    [System.SerializableAttribute()]
    public partial class FileAttachmentRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContributionFileIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilenameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContributionFileID {
            get {
                return this.ContributionFileIDField;
            }
            set {
                if ((this.ContributionFileIDField.Equals(value) != true)) {
                    this.ContributionFileIDField = value;
                    this.RaisePropertyChanged("ContributionFileID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Filename {
            get {
                return this.FilenameField;
            }
            set {
                if ((object.ReferenceEquals(this.FilenameField, value) != true)) {
                    this.FilenameField = value;
                    this.RaisePropertyChanged("Filename");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BrainfarmServiceReference.IBrainfarmService")]
    public interface IBrainfarmService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrainfarmService/GetTimestamp", ReplyAction="http://tempuri.org/IBrainfarmService/GetTimestampResponse")]
        string GetTimestamp();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrainfarmService/GetTimestamp", ReplyAction="http://tempuri.org/IBrainfarmService/GetTimestampResponse")]
        System.Threading.Tasks.Task<string> GetTimestampAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrainfarmService/RegisterUser", ReplyAction="http://tempuri.org/IBrainfarmService/RegisterUserResponse")]
        BrainfarmWeb.BrainfarmServiceReference.User RegisterUser(string username, string password, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrainfarmService/RegisterUser", ReplyAction="http://tempuri.org/IBrainfarmService/RegisterUserResponse")]
        System.Threading.Tasks.Task<BrainfarmWeb.BrainfarmServiceReference.User> RegisterUserAsync(string username, string password, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrainfarmService/Login", ReplyAction="http://tempuri.org/IBrainfarmService/LoginResponse")]
        string Login(string username, string password, bool keepLoggedIn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrainfarmService/Login", ReplyAction="http://tempuri.org/IBrainfarmService/LoginResponse")]
        System.Threading.Tasks.Task<string> LoginAsync(string username, string password, bool keepLoggedIn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrainfarmService/RenewToken", ReplyAction="http://tempuri.org/IBrainfarmService/RenewTokenResponse")]
        string RenewToken(string sessionToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrainfarmService/RenewToken", ReplyAction="http://tempuri.org/IBrainfarmService/RenewTokenResponse")]
        System.Threading.Tasks.Task<string> RenewTokenAsync(string sessionToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrainfarmService/GetCurrentUser", ReplyAction="http://tempuri.org/IBrainfarmService/GetCurrentUserResponse")]
        BrainfarmWeb.BrainfarmServiceReference.User GetCurrentUser(string sessionToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrainfarmService/GetCurrentUser", ReplyAction="http://tempuri.org/IBrainfarmService/GetCurrentUserResponse")]
        System.Threading.Tasks.Task<BrainfarmWeb.BrainfarmServiceReference.User> GetCurrentUserAsync(string sessionToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrainfarmService/CreateProject", ReplyAction="http://tempuri.org/IBrainfarmService/CreateProjectResponse")]
        BrainfarmWeb.BrainfarmServiceReference.Project CreateProject(string sessionToken, string title, string[] tags, string firstCommentBody);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrainfarmService/CreateProject", ReplyAction="http://tempuri.org/IBrainfarmService/CreateProjectResponse")]
        System.Threading.Tasks.Task<BrainfarmWeb.BrainfarmServiceReference.Project> CreateProjectAsync(string sessionToken, string title, string[] tags, string firstCommentBody);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrainfarmService/EditComment", ReplyAction="http://tempuri.org/IBrainfarmService/EditCommentResponse")]
        BrainfarmWeb.BrainfarmServiceReference.Comment EditComment(string sessionToken, int commentID, string bodyText, bool isSynthesis, bool isContribution, bool isSpecification);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrainfarmService/EditComment", ReplyAction="http://tempuri.org/IBrainfarmService/EditCommentResponse")]
        System.Threading.Tasks.Task<BrainfarmWeb.BrainfarmServiceReference.Comment> EditCommentAsync(string sessionToken, int commentID, string bodyText, bool isSynthesis, bool isContribution, bool isSpecification);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrainfarmService/RemoveComment", ReplyAction="http://tempuri.org/IBrainfarmService/RemoveCommentResponse")]
        int RemoveComment(string sessionToken, int commentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrainfarmService/RemoveComment", ReplyAction="http://tempuri.org/IBrainfarmService/RemoveCommentResponse")]
        System.Threading.Tasks.Task<int> RemoveCommentAsync(string sessionToken, int commentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrainfarmService/GetProject", ReplyAction="http://tempuri.org/IBrainfarmService/GetProjectResponse")]
        BrainfarmWeb.BrainfarmServiceReference.Project GetProject(int projectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrainfarmService/GetProject", ReplyAction="http://tempuri.org/IBrainfarmService/GetProjectResponse")]
        System.Threading.Tasks.Task<BrainfarmWeb.BrainfarmServiceReference.Project> GetProjectAsync(int projectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrainfarmService/CreateComment", ReplyAction="http://tempuri.org/IBrainfarmService/CreateCommentResponse")]
        BrainfarmWeb.BrainfarmServiceReference.Comment CreateComment(string sessionToken, int projectID, int parentCommentID, string bodyText, bool isSynthesis, bool isContribution, bool isSpecification, BrainfarmWeb.BrainfarmServiceReference.SynthesisRequest[] syntheses, BrainfarmWeb.BrainfarmServiceReference.FileAttachmentRequest[] attachments);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrainfarmService/CreateComment", ReplyAction="http://tempuri.org/IBrainfarmService/CreateCommentResponse")]
        System.Threading.Tasks.Task<BrainfarmWeb.BrainfarmServiceReference.Comment> CreateCommentAsync(string sessionToken, int projectID, int parentCommentID, string bodyText, bool isSynthesis, bool isContribution, bool isSpecification, BrainfarmWeb.BrainfarmServiceReference.SynthesisRequest[] syntheses, BrainfarmWeb.BrainfarmServiceReference.FileAttachmentRequest[] attachments);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrainfarmService/UploadFile", ReplyAction="http://tempuri.org/IBrainfarmService/UploadFileResponse")]
        BrainfarmWeb.BrainfarmServiceReference.ContributionFile UploadFile(System.IO.Stream stream);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrainfarmService/UploadFile", ReplyAction="http://tempuri.org/IBrainfarmService/UploadFileResponse")]
        System.Threading.Tasks.Task<BrainfarmWeb.BrainfarmServiceReference.ContributionFile> UploadFileAsync(System.IO.Stream stream);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrainfarmService/DownloadFile", ReplyAction="http://tempuri.org/IBrainfarmService/DownloadFileResponse")]
        System.IO.Stream DownloadFile(int contributionFileID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrainfarmService/DownloadFile", ReplyAction="http://tempuri.org/IBrainfarmService/DownloadFileResponse")]
        System.Threading.Tasks.Task<System.IO.Stream> DownloadFileAsync(int contributionFileID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrainfarmService/GetComments", ReplyAction="http://tempuri.org/IBrainfarmService/GetCommentsResponse")]
        BrainfarmWeb.BrainfarmServiceReference.Comment[] GetComments(int projectID, System.Nullable<int> parentCommentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrainfarmService/GetComments", ReplyAction="http://tempuri.org/IBrainfarmService/GetCommentsResponse")]
        System.Threading.Tasks.Task<BrainfarmWeb.BrainfarmServiceReference.Comment[]> GetCommentsAsync(int projectID, System.Nullable<int> parentCommentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrainfarmService/GetPopularProjects", ReplyAction="http://tempuri.org/IBrainfarmService/GetPopularProjectsResponse")]
        BrainfarmWeb.BrainfarmServiceReference.Project[] GetPopularProjects(int top);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrainfarmService/GetPopularProjects", ReplyAction="http://tempuri.org/IBrainfarmService/GetPopularProjectsResponse")]
        System.Threading.Tasks.Task<BrainfarmWeb.BrainfarmServiceReference.Project[]> GetPopularProjectsAsync(int top);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrainfarmService/GetRecommendedProjects", ReplyAction="http://tempuri.org/IBrainfarmService/GetRecommendedProjectsResponse")]
        BrainfarmWeb.BrainfarmServiceReference.Project[] GetRecommendedProjects(int userID, int top);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrainfarmService/GetRecommendedProjects", ReplyAction="http://tempuri.org/IBrainfarmService/GetRecommendedProjectsResponse")]
        System.Threading.Tasks.Task<BrainfarmWeb.BrainfarmServiceReference.Project[]> GetRecommendedProjectsAsync(int userID, int top);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrainfarmService/GetUserProjects", ReplyAction="http://tempuri.org/IBrainfarmService/GetUserProjectsResponse")]
        BrainfarmWeb.BrainfarmServiceReference.Project[] GetUserProjects(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrainfarmService/GetUserProjects", ReplyAction="http://tempuri.org/IBrainfarmService/GetUserProjectsResponse")]
        System.Threading.Tasks.Task<BrainfarmWeb.BrainfarmServiceReference.Project[]> GetUserProjectsAsync(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrainfarmService/GetUserComments", ReplyAction="http://tempuri.org/IBrainfarmService/GetUserCommentsResponse")]
        BrainfarmWeb.BrainfarmServiceReference.Comment[] GetUserComments(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrainfarmService/GetUserComments", ReplyAction="http://tempuri.org/IBrainfarmService/GetUserCommentsResponse")]
        System.Threading.Tasks.Task<BrainfarmWeb.BrainfarmServiceReference.Comment[]> GetUserCommentsAsync(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrainfarmService/SearchProjects", ReplyAction="http://tempuri.org/IBrainfarmService/SearchProjectsResponse")]
        BrainfarmWeb.BrainfarmServiceReference.Project[] SearchProjects(string searchKeywordsString, bool searchTags, bool searchTitles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBrainfarmService/SearchProjects", ReplyAction="http://tempuri.org/IBrainfarmService/SearchProjectsResponse")]
        System.Threading.Tasks.Task<BrainfarmWeb.BrainfarmServiceReference.Project[]> SearchProjectsAsync(string searchKeywordsString, bool searchTags, bool searchTitles);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBrainfarmServiceChannel : BrainfarmWeb.BrainfarmServiceReference.IBrainfarmService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BrainfarmServiceClient : System.ServiceModel.ClientBase<BrainfarmWeb.BrainfarmServiceReference.IBrainfarmService>, BrainfarmWeb.BrainfarmServiceReference.IBrainfarmService {
        
        public BrainfarmServiceClient() {
        }
        
        public BrainfarmServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BrainfarmServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BrainfarmServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BrainfarmServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetTimestamp() {
            return base.Channel.GetTimestamp();
        }
        
        public System.Threading.Tasks.Task<string> GetTimestampAsync() {
            return base.Channel.GetTimestampAsync();
        }
        
        public BrainfarmWeb.BrainfarmServiceReference.User RegisterUser(string username, string password, string email) {
            return base.Channel.RegisterUser(username, password, email);
        }
        
        public System.Threading.Tasks.Task<BrainfarmWeb.BrainfarmServiceReference.User> RegisterUserAsync(string username, string password, string email) {
            return base.Channel.RegisterUserAsync(username, password, email);
        }
        
        public string Login(string username, string password, bool keepLoggedIn) {
            return base.Channel.Login(username, password, keepLoggedIn);
        }
        
        public System.Threading.Tasks.Task<string> LoginAsync(string username, string password, bool keepLoggedIn) {
            return base.Channel.LoginAsync(username, password, keepLoggedIn);
        }
        
        public string RenewToken(string sessionToken) {
            return base.Channel.RenewToken(sessionToken);
        }
        
        public System.Threading.Tasks.Task<string> RenewTokenAsync(string sessionToken) {
            return base.Channel.RenewTokenAsync(sessionToken);
        }
        
        public BrainfarmWeb.BrainfarmServiceReference.User GetCurrentUser(string sessionToken) {
            return base.Channel.GetCurrentUser(sessionToken);
        }
        
        public System.Threading.Tasks.Task<BrainfarmWeb.BrainfarmServiceReference.User> GetCurrentUserAsync(string sessionToken) {
            return base.Channel.GetCurrentUserAsync(sessionToken);
        }
        
        public BrainfarmWeb.BrainfarmServiceReference.Project CreateProject(string sessionToken, string title, string[] tags, string firstCommentBody) {
            return base.Channel.CreateProject(sessionToken, title, tags, firstCommentBody);
        }
        
        public System.Threading.Tasks.Task<BrainfarmWeb.BrainfarmServiceReference.Project> CreateProjectAsync(string sessionToken, string title, string[] tags, string firstCommentBody) {
            return base.Channel.CreateProjectAsync(sessionToken, title, tags, firstCommentBody);
        }
        
        public BrainfarmWeb.BrainfarmServiceReference.Comment EditComment(string sessionToken, int commentID, string bodyText, bool isSynthesis, bool isContribution, bool isSpecification) {
            return base.Channel.EditComment(sessionToken, commentID, bodyText, isSynthesis, isContribution, isSpecification);
        }
        
        public System.Threading.Tasks.Task<BrainfarmWeb.BrainfarmServiceReference.Comment> EditCommentAsync(string sessionToken, int commentID, string bodyText, bool isSynthesis, bool isContribution, bool isSpecification) {
            return base.Channel.EditCommentAsync(sessionToken, commentID, bodyText, isSynthesis, isContribution, isSpecification);
        }
        
        public int RemoveComment(string sessionToken, int commentID) {
            return base.Channel.RemoveComment(sessionToken, commentID);
        }
        
        public System.Threading.Tasks.Task<int> RemoveCommentAsync(string sessionToken, int commentID) {
            return base.Channel.RemoveCommentAsync(sessionToken, commentID);
        }
        
        public BrainfarmWeb.BrainfarmServiceReference.Project GetProject(int projectID) {
            return base.Channel.GetProject(projectID);
        }
        
        public System.Threading.Tasks.Task<BrainfarmWeb.BrainfarmServiceReference.Project> GetProjectAsync(int projectID) {
            return base.Channel.GetProjectAsync(projectID);
        }
        
        public BrainfarmWeb.BrainfarmServiceReference.Comment CreateComment(string sessionToken, int projectID, int parentCommentID, string bodyText, bool isSynthesis, bool isContribution, bool isSpecification, BrainfarmWeb.BrainfarmServiceReference.SynthesisRequest[] syntheses, BrainfarmWeb.BrainfarmServiceReference.FileAttachmentRequest[] attachments) {
            return base.Channel.CreateComment(sessionToken, projectID, parentCommentID, bodyText, isSynthesis, isContribution, isSpecification, syntheses, attachments);
        }
        
        public System.Threading.Tasks.Task<BrainfarmWeb.BrainfarmServiceReference.Comment> CreateCommentAsync(string sessionToken, int projectID, int parentCommentID, string bodyText, bool isSynthesis, bool isContribution, bool isSpecification, BrainfarmWeb.BrainfarmServiceReference.SynthesisRequest[] syntheses, BrainfarmWeb.BrainfarmServiceReference.FileAttachmentRequest[] attachments) {
            return base.Channel.CreateCommentAsync(sessionToken, projectID, parentCommentID, bodyText, isSynthesis, isContribution, isSpecification, syntheses, attachments);
        }
        
        public BrainfarmWeb.BrainfarmServiceReference.ContributionFile UploadFile(System.IO.Stream stream) {
            return base.Channel.UploadFile(stream);
        }
        
        public System.Threading.Tasks.Task<BrainfarmWeb.BrainfarmServiceReference.ContributionFile> UploadFileAsync(System.IO.Stream stream) {
            return base.Channel.UploadFileAsync(stream);
        }
        
        public System.IO.Stream DownloadFile(int contributionFileID) {
            return base.Channel.DownloadFile(contributionFileID);
        }
        
        public System.Threading.Tasks.Task<System.IO.Stream> DownloadFileAsync(int contributionFileID) {
            return base.Channel.DownloadFileAsync(contributionFileID);
        }
        
        public BrainfarmWeb.BrainfarmServiceReference.Comment[] GetComments(int projectID, System.Nullable<int> parentCommentID) {
            return base.Channel.GetComments(projectID, parentCommentID);
        }
        
        public System.Threading.Tasks.Task<BrainfarmWeb.BrainfarmServiceReference.Comment[]> GetCommentsAsync(int projectID, System.Nullable<int> parentCommentID) {
            return base.Channel.GetCommentsAsync(projectID, parentCommentID);
        }
        
        public BrainfarmWeb.BrainfarmServiceReference.Project[] GetPopularProjects(int top) {
            return base.Channel.GetPopularProjects(top);
        }
        
        public System.Threading.Tasks.Task<BrainfarmWeb.BrainfarmServiceReference.Project[]> GetPopularProjectsAsync(int top) {
            return base.Channel.GetPopularProjectsAsync(top);
        }
        
        public BrainfarmWeb.BrainfarmServiceReference.Project[] GetRecommendedProjects(int userID, int top) {
            return base.Channel.GetRecommendedProjects(userID, top);
        }
        
        public System.Threading.Tasks.Task<BrainfarmWeb.BrainfarmServiceReference.Project[]> GetRecommendedProjectsAsync(int userID, int top) {
            return base.Channel.GetRecommendedProjectsAsync(userID, top);
        }
        
        public BrainfarmWeb.BrainfarmServiceReference.Project[] GetUserProjects(int userID) {
            return base.Channel.GetUserProjects(userID);
        }
        
        public System.Threading.Tasks.Task<BrainfarmWeb.BrainfarmServiceReference.Project[]> GetUserProjectsAsync(int userID) {
            return base.Channel.GetUserProjectsAsync(userID);
        }
        
        public BrainfarmWeb.BrainfarmServiceReference.Comment[] GetUserComments(int userID) {
            return base.Channel.GetUserComments(userID);
        }
        
        public System.Threading.Tasks.Task<BrainfarmWeb.BrainfarmServiceReference.Comment[]> GetUserCommentsAsync(int userID) {
            return base.Channel.GetUserCommentsAsync(userID);
        }
        
        public BrainfarmWeb.BrainfarmServiceReference.Project[] SearchProjects(string searchKeywordsString, bool searchTags, bool searchTitles) {
            return base.Channel.SearchProjects(searchKeywordsString, searchTags, searchTitles);
        }
        
        public System.Threading.Tasks.Task<BrainfarmWeb.BrainfarmServiceReference.Project[]> SearchProjectsAsync(string searchKeywordsString, bool searchTags, bool searchTitles) {
            return base.Channel.SearchProjectsAsync(searchKeywordsString, searchTags, searchTitles);
        }
    }
}
